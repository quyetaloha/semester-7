/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.Answer;
import model.Student;

/**
 *
 * @author ntkhanh
 */
public class ClientList extends javax.swing.JFrame {

    /**
     * Creates new form ClientList
     */
    DefaultTableModel model;
    //private String[] columnNames = {"Số TT", "Mã SV", "Họ và Tên", "IP","Thông điệp","Thời gian kết nối"};
    //private String[] columnNames = {"Số TT", "Mã SV", "Họ và Tên", "IP", "Bài 1", "Time", "Bài 2", "Time", "Bài 3", "Time", "Bài 4", "Time", "Bài 5", "Time"};
    private String[] columnNames = {"Số TT", "Mã SV", "Họ và Tên", "IP", "Nhóm", "Đăng ký", "Code 1", "Code 2", "Code 3", "Code 4", "Code 5"};
    private Object[][] data;

    public ClientList() {
        initComponents();
        this.model = new DefaultTableModel(data, columnNames);
        this.jTabClientList.setModel(model);
    }

    public void addNewRow(Student sv) {
        SimpleDateFormat formatter = new SimpleDateFormat("hh:mm:ss");
        Date currentTime = new Date();
        String dateString = formatter.format(currentTime);

        this.model.addRow(new Object[]{this.model.getRowCount(),
            sv.getMaSV(), sv.getHovaten(), sv.getIP(), sv.getGroup(), "Yes"});
    }

    public void addNewRows(Answer answer) {
        this.model.addRow(new Object[]{this.model.getRowCount() + 1,
            answer.getStudent().getMaSV(), answer.getStudent().getHovaten(),
            answer.getStudent().getIP(), answer.getStudent().getGroup(), answer.isIsAlreadyRegistration() ? "Yes" : "No",
            answer.isIsStringAnswerRight(), answer.isIsNumericAnswerRight(), "",
            "", ""});
    }

    public void updateAnswerView(Answer answer) {
        if (this.model.getRowCount() == 0) {
            this.addNewRows(answer);
            return;
        }

        Vector rows = this.model.getDataVector();
        Iterator it = rows.iterator();
        int rowPos = 0;
        boolean isUpdate = false;
        while (it.hasNext()) {
            rowPos++;
            Vector next = (Vector) it.next();
            Iterator itItem = next.iterator();
            if (next != null && next.get(1).toString().equalsIgnoreCase(answer.getStudent().getMaSV())) {
                isUpdate = true;

                this.model.setValueAt(answer.isIsAlreadyRegistration() ? "Yes" : "No", rowPos - 1, 5);
                this.model.setValueAt(answer.isIsReverseStringAnswerRight(), rowPos - 1, 6);
                this.model.setValueAt(answer.isIsNormalizationStringAnswerRight(), rowPos - 1, 7);
                this.model.setValueAt(answer.isIsBSCNNNumericAnswerRight(), rowPos - 1, 8);
                this.model.setValueAt(answer.isIsUSCLNNumericAnswerRight(), rowPos - 1, 9);
                this.model.setValueAt(answer.isIsMaxNumericAnswerRight(), rowPos - 1, 10);
                break;
            }

        }
        if (!isUpdate) {
            this.addNewRows(answer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabClientList = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ClientList.this.windowClosing(evt);
            }
        });

        jTabClientList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTabClientList);

        jMenu2.setText("Export Excel");

        jMenuItem1.setText("Save Excel");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_windowClosing

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
        
        FileOutputStream out;
        try {
            SimpleDateFormat formatter = new SimpleDateFormat("hh:mm:ss");
            Date currentTime = new Date();
            String dateString = formatter.format(currentTime);
            
            out = new FileOutputStream(dateString + ".xls");
            
            
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ClientList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ClientList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClientList client = new ClientList();
                client.setVisible(true);
                client.addNewRow(null);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabClientList;
    // End of variables declaration//GEN-END:variables
}
